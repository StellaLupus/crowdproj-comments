# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the workflow will run
on:
  release:
    types: [ created ]
  workflow_run:
    workflows: [ Tests ]
    types:
      - completed

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  publish-platforms:
    runs-on: ubuntu-latest
    #    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1


      - name: Publish plugin
        run: ./gradlew --stacktrace deploy
        env:
          CONTAINER_REGISTRY_PASS: ${{ secrets.CONTAINER_REGISTRY_PASS }}
          CONTAINER_REGISTRY_USER: ${{ secrets.CONTAINER_REGISTRY_USER }}
          CONTAINER_REGISTRY_HOST: ${{ vars.CONTAINER_REGISTRY_HOST }}
          CONTAINER_REGISTRY_PREF: ${{ vars.CONTAINER_REGISTRY_PREF }}
          CONTAINER_REGISTRY_NAME: ${{ vars.CONTAINER_REGISTRY_NAME }}
          PROJECT_VERSION: ${{ github.event.release.tag_name }}

  create-manifest:
    runs-on: ubuntu-latest
    needs: publish-platforms
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create manifest release
        run: |
          docker manifest create \
            ${{ vars.CONTAINER_REGISTRY_PREF }}/${{ vars.CONTAINER_REGISTRY_NAME }}:${{ github.event.release.tag_name }} \
            ${{ vars.CONTAINER_REGISTRY_PREF }}/${{ vars.CONTAINER_REGISTRY_NAME }}:${{ github.event.release.tag_name }}-x64 \
            ${{ vars.CONTAINER_REGISTRY_PREF }}/${{ vars.CONTAINER_REGISTRY_NAME }}:${{ github.event.release.tag_name }}-arm64

          docker manifest push ${{ vars.CONTAINER_REGISTRY_PREF }}/${{ vars.CONTAINER_REGISTRY_NAME }}:${{ github.event.release.tag_name }}

      - name: Create manifest latest
        run: |
          docker manifest create \
            ${{ vars.CONTAINER_REGISTRY_PREF }}/${{ vars.CONTAINER_REGISTRY_NAME }}:latest \
            ${{ vars.CONTAINER_REGISTRY_PREF }}/${{ vars.CONTAINER_REGISTRY_NAME }}:${{ github.event.release.tag_name }}-x64 \
            ${{ vars.CONTAINER_REGISTRY_PREF }}/${{ vars.CONTAINER_REGISTRY_NAME }}:${{ github.event.release.tag_name }}-arm64

          docker manifest push ${{ vars.CONTAINER_REGISTRY_PREF }}/${{ vars.CONTAINER_REGISTRY_NAME }}:latest