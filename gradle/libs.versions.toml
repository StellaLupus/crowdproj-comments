[versions]
kotlin = "1.9.20"
java = "17"
ktor = "2.3.6"
serialization = "1.6.1"
crowdprojCodegenerator = "0.2.0"
openapi = "7.1.0"
bmuschko = "9.3.7"
apiSpec = "0.2.0"
datetime = "0.4.1"
coroutines = "1.7.3"
uuid = "0.8.2"
slf4j = "2.0.9"
logback = "1.4.11"
oshaiLogging = "5.1.0"
logbackEncoder = "7.4"
janino = "3.1.10"
logbackKafka = "0.1.0"
logbackMoreAppenders = "1.8.8"
fluent = "0.3.4"
crowdprojCoR = "0.5.7"

[libraries]
#KTOR Server
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-core-jvm = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-auto-head-response = { module = "io.ktor:ktor-server-auto-head-response", version.ref = "ktor" }
ktor-server-caching-headers = { module = "io.ktor:ktor-server-caching-headers", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktor-server-config-yaml = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization", version.ref = "ktor" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-locations = { module = "io.ktor:ktor-server-locations", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-default-headers = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-call-id = { module = "io.ktor:ktor-server-call-id", version.ref = "ktor" }
ktor-server-swagger = { module = "io.ktor:ktor-server-swagger", version.ref = "ktor" }
#KTOR Serialization
ktor-serialization-jackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor" }
#KTOR Client
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
#Kotlinx
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
#UUID
uuid = { module = "com.benasher44:uuid", version.ref = "uuid" }
#Logging
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
logging-logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logging-logback-encoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logbackEncoder" }
logging-logback-kafka = { module = "com.github.danielwegener:logback-kafka-appender", version.ref = "logbackKafka" }
logging-oshai = {module = "io.github.oshai:kotlin-logging", version.ref = "oshaiLogging"}
janino = {module = "org.codehaus.janino:janino", version.ref = "janino"}
logging-logback-more-appenders = { module = "com.sndyuk:logback-more-appenders", version.ref = "logbackMoreAppenders" }
logging-fluent = { module = "org.fluentd:fluent-logger", version.ref = "fluent" }
#Chain of Responsability
crowdproj-cor = { module = "com.crowdproj:kotlin-cor", version.ref = "crowdprojCoR" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
crowdproj-generator = { id = "com.crowdproj.generator", version.ref = "crowdprojCodegenerator" }
openapi = { id = "org.openapi.generator", version.ref = "openapi" }
bmuschko = { id = "com.bmuschko.docker-remote-api", version.ref = "bmuschko" }
